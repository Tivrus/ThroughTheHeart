from flask import Flask, render_template, request, jsonify
import json
import os
import threading
import telebot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
server = Flask(__name__)

# –ü—É—Ç—å –∫ JSON-—Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
DATA_FILE = "submissions.json"
# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π
MESSAGES_IDS_FILE = "message_ids.json"

def save_to_json(data):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON-—Ñ–∞–π–ª.
    """
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, "r", encoding="utf-8") as file:
            try:
                submissions = json.load(file)
            except json.JSONDecodeError:
                submissions = []
    else:
        submissions = []

    submissions.append(data)

    with open(DATA_FILE, "w", encoding="utf-8") as file:
        json.dump(submissions, file, ensure_ascii=False, indent=4)


@server.route("/main")
def main():
    return render_template("index.html", title="–ü–∏—Ä—Å–∏–Ω–≥ –°–∞–ª–æ–Ω | Through the heart", Ava="../static/images/logo.png")


@server.route("/services")
def services():
    return render_template("services.html", title="Cart", Ava="<img src='' alt=''>")


@server.route("/submit_form", methods=["POST"])
def submit_form():
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ JSON-—Ñ–∞–π–ª.
    """
    name = request.form.get("name")
    surname = request.form.get("surname")
    phone = request.form.get("phone")
    comment = request.form.get("comment")

    if not all([name, surname, phone]):
        return jsonify({"status": "error", "message": "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è."})

    submission_data = {
        "name": name,
        "surname": surname,
        "phone": phone,
        "comment": comment,
    }

    save_to_json(submission_data)

    return jsonify({"status": "success", "message": "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!"})


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram-–±–æ—Ç–∞
BOT_TOKEN = "7920844201:AAECMrQS3Iq8fpAg26qtnKJlFC5PGcMGnYw"
bot = telebot.TeleBot(BOT_TOKEN)


def read_json(file_path):
    """
    –ß–∏—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–∞.
    """
    if not os.path.exists(file_path) or os.stat(file_path).st_size == 0:
        return []
    try:
        with open(file_path, "r", encoding="utf-8") as file:
            data = json.load(file)
            return data
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return []


def save_message_ids(message_ids):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID —Å–æ–æ–±—â–µ–Ω–∏–π –≤ JSON-—Ñ–∞–π–ª.
    """
    with open(MESSAGES_IDS_FILE, "w", encoding="utf-8") as file:
        json.dump(message_ids, file, ensure_ascii=False, indent=4)


def delete_previous_messages(chat_id):
    """
    –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç–µ.
    """
    message_ids = read_json(MESSAGES_IDS_FILE)

    for message_id in message_ids:
        try:
            bot.delete_message(chat_id=chat_id, message_id=message_id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID {message_id}: {e}")

    # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª —Å ID —Å–æ–æ–±—â–µ–Ω–∏–π
    save_message_ids([])


@bot.message_handler(commands=["start"])
def send_welcome(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    """
    chat_id = message.chat.id

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    delete_previous_messages(chat_id)

    # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–∞
    data = read_json(DATA_FILE)

    if not data:
        response = "–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫."
        sent_message = bot.send_message(chat_id, response)
        save_message_ids([sent_message.message_id])
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –∑–∞—è–≤–∫—É –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    message_ids = []
    for idx, submission in enumerate(data, start=1):
        response = f"üìù –ó–∞—è–≤–∫–∞ #{idx}:\n"
        response += f"üë§ –ò–º—è: {submission.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        response += f"üìõ –§–∞–º–∏–ª–∏—è: {submission.get('surname', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        response += f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {submission.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        response += f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {submission.get('comment', '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è')}\n"
        sent_message = bot.send_message(chat_id, response)
        message_ids.append(sent_message.message_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    save_message_ids(message_ids)


def run_telegram_bot():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram-–±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ.
    """
    print("–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
    bot.polling(none_stop=True)


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    telegram_thread = threading.Thread(target=run_telegram_bot)
    telegram_thread.daemon = True  # –ü–æ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    telegram_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä
    print("–ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞...")
    server.run(debug=True)